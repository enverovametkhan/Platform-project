version: 2.1

orbs:
  node: circleci/node@5.0.1

parameters:
  api-service-job:
    type: boolean
    default: false
  frontend-service-job:
    type: boolean
    default: false

commands:
  test-api:
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - run:
          name: "Setup Cloud SDK"
          command: |
            cd api
            docker build -f ./Test.Dockerfile --platform linux/amd64 .
  build-and-push-api-docker:
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - run:
          name: "Setup Cloud SDK"
          command: |
            apt-get install -qq -y gettext
            echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://gcr.io/
      - run:
          name: Docker build BlogApp api
          command: |
            cd api
            docker build -f ./Dockerfile --platform linux/amd64 -t gcr.io/capable-reserve-410215/api/$CIRCLE_BRANCH .
      - run:
          name: Push BlogApp api image to gcr
          command: |
            docker push gcr.io/capable-reserve-410215/api/$CIRCLE_BRANCH

  build-and-push-frontend-docker:
    parameters:
      sourcemap:
        type: boolean
        default: false
      url:
        type: string
        default: https://dev-api.123myblog.work
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - run:
          name: "Setup Cloud SDK"
          command: |
            apt-get install -qq -y gettext
            echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://gcr.io/
      - run:
          name: Docker build BlogApp Frontend
          command: |
            cd frontend
            docker build \
            --build-arg REACT_APP_NODE_ENV=$CIRCLE_BRANCH \
            --build-arg REACT_APP_BASE_URL=<< parameters.url >> \
            --build-arg GENERATE_SOURCEMAP=<< parameters.sourcemap >> \
            --platform linux/amd64 \
            -f ./Dockerfile -t gcr.io/capable-reserve-410215/frontend/$CIRCLE_BRANCH .
      - run:
          name: Push BlogApp frontend image to gcr
          command: |
            docker push gcr.io/capable-reserve-410215/frontend/$CIRCLE_BRANCH

jobs:
  test-api:
    docker:
      - image: cimg/node:18.16.0
    steps:
      - test-api
  build-and-push-api-docker:
    docker:
      - image: google/cloud-sdk
    steps:
      - build-and-push-api-docker

  build-and-push-frontend-docker:
    docker:
      - image: google/cloud-sdk
    parameters:
      sourcemap:
        type: boolean
        default: false
      url:
        type: string
        default: https://dev-api.123myblog.work
    steps:
      - build-and-push-frontend-docker:
          sourcemap: << parameters.sourcemap >>

workflows:
  version: 2
  build-api:
    when: << pipeline.parameters.api-service-job >>
    jobs:
      - test-api
      - build-and-push-api-docker:
          context:
            - BlogApp
          requires:
            - test-api

  build-frontend-dev:
    when: << pipeline.parameters.frontend-service-job >>
    jobs:
      - build-and-push-frontend-docker:
          context:
            - BlogApp
          sourcemap: false
          url: https://dev-api.123myblog.work
          filters:
            branches:
              only:
                - dev
  build-frontend-release:
    when: << pipeline.parameters.frontend-service-job >>
    jobs:
      - build-and-push-frontend-docker:
          context:
            - BlogApp
          sourcemap: false
          url: https://release-api.123myblog.work
          filters:
            branches:
              only:
                - release

  build-frontend-main:
    when: << pipeline.parameters.frontend-service-job >>
    jobs:
      - build-and-push-frontend-docker:
          context:
            - BlogApp
          sourcemap: false
          url: https://api.123myblog.work
          filters:
            branches:
              only:
                - main
